--USE master;
--DROP DATABASE IF EXISTS SocialNetwork;
--CREATE DATABASE SocialNetwork;
--USE SocialNetwork;

-- Создание таблицы Одногруппники
CREATE TABLE Одногруппники (
    Id INT PRIMARY KEY IDENTITY,
    Имя NVARCHAR(50),
    Фамилия NVARCHAR(50),
    Группа NVARCHAR(10),
    Курс INT,
    Возраст INT,
    Пол NVARCHAR(1)
);

-- Создание таблицы Книги
CREATE TABLE Книги (
    Id INT PRIMARY KEY IDENTITY,
    Название NVARCHAR(100),
    Автор NVARCHAR(100),
    Жанр NVARCHAR(50)
);

-- Создание таблицы Фильмы
CREATE TABLE Фильмы (
    Id INT PRIMARY KEY IDENTITY,
    Название NVARCHAR(100),
    Режиссер NVARCHAR(100),
    Жанр NVARCHAR(50)
);

-- Создание таблицы РекомендуетКнигу
CREATE TABLE РекомендуетКнигу (
    Id INT PRIMARY KEY IDENTITY,
    ОдногруппникId INT,
    КнигаId INT,
    FOREIGN KEY (ОдногруппникId) REFERENCES Одногруппники(Id),
    FOREIGN KEY (КнигаId) REFERENCES Книги(Id)
);

-- Создание таблицы РекомендуетФильм
CREATE TABLE РекомендуетФильм (
    Id INT PRIMARY KEY IDENTITY,
    ОдногруппникId INT,
    ФильмId INT,
    FOREIGN KEY (ОдногруппникId) REFERENCES Одногруппники(Id),
    FOREIGN KEY (ФильмId) REFERENCES Фильмы(Id)
);


-- Вставка данных в таблицу Одногруппники
INSERT INTO Одногруппники (Имя, Фамилия, Группа, Курс, Возраст, Пол)
VALUES 
('Мария', 'Петрова', 'БИ-201', 2, 19, 'Ж'),
('Иван', 'Иванов', 'БИ-201', 2, 20, 'М'),
('Анна', 'Сидорова', 'БИ-201', 2, 19, 'Ж'),
('Алексей', 'Кузнецов', 'БИ-201', 2, 21, 'М'),
('Елена', 'Смирнова', 'БИ-201', 2, 20, 'Ж'),
('Дмитрий', 'Волков', 'БИ-201', 2, 22, 'М'),
('Ольга', 'Михайлова', 'БИ-201', 2, 19, 'Ж'),
('Никита', 'Фёдоров', 'БИ-201', 2, 20, 'М'),
('Светлана', 'Николаева', 'БИ-201', 2, 21, 'Ж'),
('Андрей', 'Крылов', 'БИ-201', 2, 22, 'М');

-- Вставка данных в таблицу Книги
INSERT INTO Книги (Название, Автор, Жанр)
VALUES 
('Война и мир', 'Толстой', 'Исторический роман'),
('Преступление и наказание', 'Достоевский', 'Психологический роман'),
('Мастер и Маргарита', 'Булгаков', 'Фантастика'),
('Анна Каренина', 'Толстой', 'Роман'),
('Идиот', 'Достоевский', 'Психологический роман'),
('Тихий Дон', 'Шолохов', 'Исторический роман'),
('Отцы и дети', 'Тургенев', 'Роман'),
('Доктор Живаго', 'Пастернак', 'Роман'),
('Герой нашего времени', 'Лермонтов', 'Роман'),
('Обломов', 'Гончаров', 'Роман');

-- Вставка данных в таблицу Фильмы
INSERT INTO Фильмы (Название, Режиссер, Жанр)
VALUES 
('Интерстеллар', 'Кристофер Нолан', 'Научная фантастика'),
('Начало', 'Кристофер Нолан', 'Научная фантастика'),
('Матрица', 'Лана Вачовски, Лилли Вачовски', 'Научная фантастика'),
('Аватар', 'Джеймс Кэмерон', 'Научная фантастика'),
('Терминатор 2', 'Джеймс Кэмерон', 'Боевик'),
('Бегущий по лезвию', 'Ридли Скотт', 'Научная фантастика'),
('Назад в будущее', 'Роберт Земекис', 'Фантастика'),
('Звёздные войны: Эпизод IV', 'Джордж Лукас', 'Фантастика'),
('Гравитация', 'Альфонсо Куарон', 'Научная фантастика'),
('Пятый элемент', 'Люк Бессон', 'Научная фантастика');

-- Вставка данных в таблицу РекомендуетКнигу
INSERT INTO РекомендуетКнигу (ОдногруппникId, КнигаId)
VALUES 
((SELECT Id FROM Одногруппники WHERE Имя = 'Мария'), (SELECT Id FROM Книги WHERE Название = 'Война и мир')),
((SELECT Id FROM Одногруппники WHERE Имя = 'Иван'), (SELECT Id FROM Книги WHERE Название = 'Преступление и наказание')),
((SELECT Id FROM Одногруппники WHERE Имя = 'Анна'), (SELECT Id FROM Книги WHERE Название = 'Мастер и Маргарита')),
((SELECT Id FROM Одногруппники WHERE Имя = 'Алексей'), (SELECT Id FROM Книги WHERE Название = 'Анна Каренина')),
((SELECT Id FROM Одногруппники WHERE Имя = 'Елена'), (SELECT Id FROM Книги WHERE Название = 'Идиот')),
((SELECT Id FROM Одногруппники WHERE Имя = 'Дмитрий'), (SELECT Id FROM Книги WHERE Название = 'Тихий Дон')),
((SELECT Id FROM Одногруппники WHERE Имя = 'Ольга'), (SELECT Id FROM Книги WHERE Название = 'Отцы и дети')),
((SELECT Id FROM Одногруппники WHERE Имя = 'Никита'), (SELECT Id FROM Книги WHERE Название = 'Доктор Живаго')),
((SELECT Id FROM Одногруппники WHERE Имя = 'Светлана'), (SELECT Id FROM Книги WHERE Название = 'Герой нашего времени')),
((SELECT Id FROM Одногруппники WHERE Имя = 'Андрей'), (SELECT Id FROM Книги WHERE Название = 'Обломов'));

-- Вставка данных в таблицу РекомендуетФильм
INSERT INTO РекомендуетФильм (ОдногруппникId, ФильмId)
VALUES 
((SELECT Id FROM Одногруппники WHERE Имя = 'Анна'), (SELECT Id FROM Фильмы WHERE Название = 'Интерстеллар')),
((SELECT Id FROM Одногруппники WHERE Имя = 'Мария'), (SELECT Id FROM Фильмы WHERE Название = 'Начало')),
((SELECT Id FROM Одногруппники WHERE Имя = 'Алексей'), (SELECT Id FROM Фильмы WHERE Название = 'Матрица')),
((SELECT Id FROM Одногруппники WHERE Имя = 'Елена'), (SELECT Id FROM Фильмы WHERE Название = 'Аватар')),
((SELECT Id FROM Одногруппники WHERE Имя = 'Дмитрий'), (SELECT Id FROM Фильмы WHERE Название = 'Терминатор 2')),
((SELECT Id FROM Одногруппники WHERE Имя = 'Ольга'), (SELECT Id FROM Фильмы WHERE Название = 'Бегущий по лезвию')),
((SELECT Id FROM Одногруппники WHERE Имя = 'Никита'), (SELECT Id FROM Фильмы WHERE Название = 'Назад в будущее')),
((SELECT Id FROM Одногруппники WHERE Имя = 'Светлана'), (SELECT Id FROM Фильмы WHERE Название = 'Звёздные войны: Эпизод IV')),
((SELECT Id FROM Одногруппники WHERE Имя = 'Андрей'), (SELECT Id FROM Фильмы WHERE Название = 'Гравитация')),
((SELECT Id FROM Одногруппники WHERE Имя = 'Иван'), (SELECT Id FROM Фильмы WHERE Название = 'Пятый элемент'));


SELECT o.Имя, o.Фамилия
FROM Одногруппники o
JOIN РекомендуетКнигу rk ON o.Id = rk.ОдногруппникId
JOIN Книги k ON rk.КнигаId = k.Id
WHERE k.Название = 'Война и мир';


SELECT k.Название, k.Автор
FROM Одногруппники o
JOIN РекомендуетКнигу rk ON o.Id = rk.ОдногруппникId
JOIN Книги k ON rk.КнигаId = k.Id
WHERE o.Имя = 'Мария' AND o.Фамилия = 'Петрова';


SELECT o.Имя, o.Фамилия, f.Название
FROM Одногруппники o
JOIN РекомендуетФильм rf ON o.Id = rf.ОдногруппникId
JOIN Фильмы f ON rf.ФильмId = f.Id;


SELECT DISTINCT o.Имя, o.Фамилия
FROM Одногруппники o
JOIN РекомендуетКнигу rk ON o.Id = rk.ОдногруппникId
JOIN РекомендуетФильм rf ON o.Id = rf.ОдногруппникId;


SELECT o.Имя, o.Фамилия, f.Название
FROM Одногруппники o
JOIN РекомендуетФильм rf ON o.Id = rf.ОдногруппникId
JOIN Фильмы f ON rf.ФильмId = f.Id
WHERE f.Жанр = 'Научная фантастика';


WITH BFSPaths AS (
    SELECT 
        OG.Имя AS Node,
        0 AS Depth,
        CAST(OG.Имя AS NVARCHAR(MAX)) AS Path
    FROM 
        Одногруппники AS OG
    WHERE 
        OG.Имя = N'Мария' AND OG.Фамилия = N'Петрова'
    UNION ALL
    SELECT 
        O.Имя,
        BP.Depth + 1,
        BP.Path + ' -> ' + O.Имя
    FROM 
        BFSPaths AS BP
    JOIN 
        РекомендуетФильм AS RF ON BP.Node = RF.ОдногруппникId
    JOIN 
        Одногруппники AS O ON RF.ФильмId = O.Id
    WHERE 
        BP.Depth < 3 -- Максимальная глубина поиска
)
SELECT TOP 1
    *
FROM 
    BFSPaths
ORDER BY 
    Depth;
